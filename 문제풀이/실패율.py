# -*- coding: utf-8 -*-
"""실패율.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v9mssnx1DT9KIOFIaeg-gLJLZKnjBemW
"""

stages = [2,1,2,6,2,4,3,3]
N =5

stages = [3,3,3,3,3]
N =4

#result =[3,4,2,1,5]

import collections  import collections

import collections

stages = [2,1,2,6,2,4,3,3]
N =5

stage_dict = collections.defaultdict(int)
stage_counts = collections.Counter(stages)
stage_counts.keys()
for i in range(1,N+2):
  stage_dict[i] = stage_counts[i]
people = len(stages)
sum = 0
empty_dict = collections.defaultdict(float)
for i in range(1,N+1):
  empty_dict[i]
for i in range(1,N+1):
  empty_dict[i]  = (stage_dict[i]/ ( people-sum) )
  sum+=stage_dict[i]
  if sum == people:
    break
    break
result_kv = sorted( empty_dict.items() , key= lambda item: item[1] ,reverse= True)
result = list(list ( zip(*result_kv)   )[0])

empty_dict

result

stage_dict = collections.defaultdict(int)
stage_counts = collections.Counter(stages)
stage_counts.keys()
for i in range(1,N+2):
  stage_dict[i] = stage_counts[i]
people = len(stages)
sum = 0
empty_dict = collections.defaultdict(float)
for i in range(1,N+1):
  empty_dict[i]  = (stage_dict[i]/ ( people-sum) )
  sum+=stage_dict[i]
  if sum == people:
    break
result_kv = sorted( empty_dict.items() , key= lambda item: item[1] ,reverse= True)
result = list(list ( zip(*result_kv)   )[0])

result

stage_dict = collections.defaultdict(int)

stage_counts = collections.Counter(stages)

stage_counts

stage_counts.keys()

for i in range(1,N+2):
  stage_dict[i] = stage_counts[i]

stage_dict

people = len(stages)
sum = 0

empty_dict = collections.defaultdict(float)
for i in range(1,N+1):
  empty_dict[i]  = (stage_dict[i]/ ( people-sum) )
  sum+=stage_dict[i]

result_kv = sorted( empty_dict.items() , key= lambda item: item[1] ,reverse= True)

result = list(list ( zip(*result_kv)   )[0])

result

stage_list = list(zip(*sorted_stage_key_value))





stage_key_value = stage_counts.most_common(len(stage_counts))

sorted_stage_key_value = sorted(stage_key_value , key = lambda x: x[0])

sorted_stage_key_value

stage_list = list(zip(*sorted_stage_key_value))

stage_list

empty = []
count = 1
for i in range(1,N+2):
  if stage_list[0][i] == i:
    empty.append(stage_list[1][i])
  else:
    empty.append(0)



for stage , people in zip(stage_list[0], stage_list[1] ):
  if count == stage:
    empty.append(people)
  else:
    empty.append(0)
  print(count)
  count+=1

empty

stage_counts.keys()

stage_counts.values()

stage_people = list(stage_counts.values())

stage_people

